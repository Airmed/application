//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.3.1.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package com.ti.smartconfig;

import android.content.Intent;
import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.ViewGroup;
import com.ti.smartconfig.utils.SecurityType;
import com.ti.smartconfig.utils.SharedPreferencesInterface_;
import org.androidannotations.api.UiThreadExecutor;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class DeviceConfiguration_
    extends com.ti.smartconfig.DeviceConfiguration
    implements HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public<T extends View> T internalFindViewById(int id) {
        return ((T)((contentView_ == null)?null:contentView_.findViewById(id)));
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(R.layout.tab_device_configuration, container, false);
        }
        return contentView_;
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        contentView_ = null;
        tab_device_configuration_start_button = null;
        tab_device_configuration_device_name_editText = null;
        tab_device_configuration_device_name_layout = null;
        textViewConnectionTextView = null;
        tab_device_configuration_device_to_configure_device_pick_layout = null;
        tab_device_configuration_device_to_configure_device_pick_label = null;
        tab_device_configuration_device_to_configure_device_pick_image = null;
        tab_device_configuration_loader_layout = null;
        tab_device_configuration_loader_label = null;
        tab_device_configuration_router_layout = null;
        tab_device_configuration_router_device_pick_label = null;
        tab_device_configuration_router_device_pick_layout = null;
        tab_device_configuration_router_device_pick_image = null;
        tab_device_configuration_device_connection = null;
        tab_device_configuration_iot_uuid_layout = null;
        tab_device_configuration_iot_uuid_name_editText = null;
        tab_device_configuration_password_checkbox = null;
        tab_device_configuration_password_check_layout = null;
        tab_device_configuration_password_check_editText = null;
    }

    private void init_(Bundle savedInstanceState) {
        this.prefs = new SharedPreferencesInterface_(getActivity());
        OnViewChangedNotifier.registerOnViewChangedListener(this);
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static DeviceConfiguration_.FragmentBuilder_ builder() {
        return new DeviceConfiguration_.FragmentBuilder_();
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.tab_device_configuration_start_button = hasViews.internalFindViewById(R.id.tab_device_configuration_start_button);
        this.tab_device_configuration_device_name_editText = hasViews.internalFindViewById(R.id.tab_device_configuration_device_name_editText);
        this.tab_device_configuration_device_name_layout = hasViews.internalFindViewById(R.id.tab_device_configuration_device_name_layout);
        this.textViewConnectionTextView = hasViews.internalFindViewById(R.id.textViewConnectionTextView);
        this.tab_device_configuration_device_to_configure_device_pick_layout = hasViews.internalFindViewById(R.id.tab_device_configuration_device_to_configure_device_pick_layout);
        this.tab_device_configuration_device_to_configure_device_pick_label = hasViews.internalFindViewById(R.id.tab_device_configuration_device_to_configure_device_pick_label);
        this.tab_device_configuration_device_to_configure_device_pick_image = hasViews.internalFindViewById(R.id.tab_device_configuration_device_to_configure_device_pick_image);
        this.tab_device_configuration_loader_layout = hasViews.internalFindViewById(R.id.tab_device_configuration_loader_layout);
        this.tab_device_configuration_loader_label = hasViews.internalFindViewById(R.id.tab_device_configuration_loader_label);
        this.tab_device_configuration_router_layout = hasViews.internalFindViewById(R.id.tab_device_configuration_router_layout);
        this.tab_device_configuration_router_device_pick_label = hasViews.internalFindViewById(R.id.tab_device_configuration_router_device_pick_label);
        this.tab_device_configuration_router_device_pick_layout = hasViews.internalFindViewById(R.id.tab_device_configuration_router_device_pick_layout);
        this.tab_device_configuration_router_device_pick_image = hasViews.internalFindViewById(R.id.tab_device_configuration_router_device_pick_image);
        this.tab_device_configuration_device_connection = hasViews.internalFindViewById(R.id.tab_device_configuration_device_connection);
        this.tab_device_configuration_iot_uuid_layout = hasViews.internalFindViewById(R.id.tab_device_configuration_iot_uuid_layout);
        this.tab_device_configuration_iot_uuid_name_editText = hasViews.internalFindViewById(R.id.tab_device_configuration_iot_uuid_name_editText);
        this.tab_device_configuration_password_checkbox = hasViews.internalFindViewById(R.id.tab_device_configuration_password_checkbox);
        this.tab_device_configuration_password_check_layout = hasViews.internalFindViewById(R.id.tab_device_configuration_password_check_layout);
        this.tab_device_configuration_password_check_editText = hasViews.internalFindViewById(R.id.tab_device_configuration_password_check_editText);
        View view_tab_device_configuration_router_question_button = hasViews.internalFindViewById(R.id.tab_device_configuration_router_question_button);
        View view_tab_device_configuration_device_to_configure_question_button = hasViews.internalFindViewById(R.id.tab_device_configuration_device_to_configure_question_button);
        View view_tab_device_configuration_device_name_question_button = hasViews.internalFindViewById(R.id.tab_device_configuration_device_name_question_button);
        View view_tab_device_configuration_iot_uuid_button = hasViews.internalFindViewById(R.id.tab_device_configuration_iot_uuid_button);

        if (view_tab_device_configuration_router_question_button!= null) {
            view_tab_device_configuration_router_question_button.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    DeviceConfiguration_.this.tab_device_configuration_router_question_button();
                }
            }
            );
        }
        if (view_tab_device_configuration_device_to_configure_question_button!= null) {
            view_tab_device_configuration_device_to_configure_question_button.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    DeviceConfiguration_.this.tab_device_configuration_device_to_configure_question_button();
                }
            }
            );
        }
        if (view_tab_device_configuration_device_name_question_button!= null) {
            view_tab_device_configuration_device_name_question_button.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    DeviceConfiguration_.this.tab_device_configuration_device_name_question_button();
                }
            }
            );
        }
        if (this.tab_device_configuration_start_button!= null) {
            this.tab_device_configuration_start_button.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    DeviceConfiguration_.this.tab_device_configuration_start_button();
                }
            }
            );
        }
        if (this.tab_device_configuration_device_to_configure_device_pick_layout!= null) {
            this.tab_device_configuration_device_to_configure_device_pick_layout.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    DeviceConfiguration_.this.tab_device_configuration_device_to_configure_device_pick_layout();
                }
            }
            );
        }
        if (this.tab_device_configuration_router_device_pick_layout!= null) {
            this.tab_device_configuration_router_device_pick_layout.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    DeviceConfiguration_.this.tab_device_configuration_router_device_pick_layout();
                }
            }
            );
        }
        if (view_tab_device_configuration_iot_uuid_button!= null) {
            view_tab_device_configuration_iot_uuid_button.setOnClickListener(new OnClickListener() {

                @Override
                public void onClick(View view) {
                    DeviceConfiguration_.this.tab_device_configuration_iot_uuid_button();
                }
            }
            );
        }
        afterViews();
    }

    @Override
    public void onActivityResult(int requestCode, int resultCode, Intent data) {
        super.onActivityResult(requestCode, resultCode, data);
        switch (requestCode) {
            case  44 :
            {
                DeviceConfiguration_.this.onFirstAttemptFailureResult(resultCode, data);
                break;
            }
            case  4 :
            {
                DeviceConfiguration_.this.onSettingsResult(resultCode, data);
                break;
            }
        }
    }

    @Override
    void resetDeviceToConfigureView() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                DeviceConfiguration_.super.resetDeviceToConfigureView();
            }
        }
        , 0L);
    }

    @Override
    void changeDeviceName(final String newName) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                DeviceConfiguration_.super.changeDeviceName(newName);
            }
        }
        , 0L);
    }

    @Override
    public void setToReady(final Boolean isReady) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                DeviceConfiguration_.super.setToReady(isReady);
            }
        }
        , 0L);
    }

    @Override
    public void closeDialog() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                DeviceConfiguration_.super.closeDialog();
            }
        }
        , 0L);
    }

    @Override
    void connectToSSIDAndGetScanResults(final String ssid, final SecurityType securityType, final String password) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                DeviceConfiguration_.super.connectToSSIDAndGetScanResults(ssid, securityType, password);
            }
        }
        , 0L);
    }

    @Override
    void checkParams() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                DeviceConfiguration_.super.checkParams();
            }
        }
        , 0L);
    }

    @Override
    void finish(final Boolean moveToDevice) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                DeviceConfiguration_.super.finish(moveToDevice);
            }
        }
        , 0L);
    }

    @Override
    public void print(final String string) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                DeviceConfiguration_.super.print(string);
            }
        }
        , 0L);
    }

    @Override
    void showToastWithMessage(final String msg) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                DeviceConfiguration_.super.showToastWithMessage(msg);
            }
        }
        , 0L);
    }

    @Override
    void showDeviceConfigurationDialog() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                DeviceConfiguration_.super.showDeviceConfigurationDialog();
            }
        }
        , 0L);
    }

    @Override
    void scanForDevices() {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                DeviceConfiguration_.super.scanForDevices();
            }
        }
        , 0L);
    }

    @Override
    void showLoaderWithText(final Boolean show, final String msg) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                DeviceConfiguration_.super.showLoaderWithText(show, msg);
            }
        }
        , 0L);
    }

    @Override
    void showProgressDialog(final int duration, final String title) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                DeviceConfiguration_.super.showProgressDialog(duration, title);
            }
        }
        , 0L);
    }

    @Override
    void updateProgressDialog(final int progress) {
        UiThreadExecutor.runTask("", new Runnable() {

            @Override
            public void run() {
                DeviceConfiguration_.super.updateProgressDialog(progress);
            }
        }
        , 0L);
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<DeviceConfiguration_.FragmentBuilder_, com.ti.smartconfig.DeviceConfiguration>
    {

        @Override
        public com.ti.smartconfig.DeviceConfiguration build() {
            DeviceConfiguration_ fragment_ = new DeviceConfiguration_();
            fragment_.setArguments(args);
            return fragment_;
        }
    }
}
