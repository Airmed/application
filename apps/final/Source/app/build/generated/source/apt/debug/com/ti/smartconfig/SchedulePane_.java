//
// DO NOT EDIT THIS FILE.
// Generated using AndroidAnnotations 4.3.1.
// 
// You can create a larger work that contains this file and distribute that work under terms of your choice.
//

package com.ti.smartconfig;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import org.androidannotations.api.builder.FragmentBuilder;
import org.androidannotations.api.view.HasViews;
import org.androidannotations.api.view.OnViewChangedListener;
import org.androidannotations.api.view.OnViewChangedNotifier;

public final class SchedulePane_
    extends com.ti.smartconfig.SchedulePane
    implements HasViews, OnViewChangedListener
{
    private final OnViewChangedNotifier onViewChangedNotifier_ = new OnViewChangedNotifier();
    private View contentView_;

    @Override
    public void onCreate(Bundle savedInstanceState) {
        OnViewChangedNotifier previousNotifier = OnViewChangedNotifier.replaceNotifier(onViewChangedNotifier_);
        init_(savedInstanceState);
        super.onCreate(savedInstanceState);
        OnViewChangedNotifier.replaceNotifier(previousNotifier);
    }

    @Override
    public<T extends View> T internalFindViewById(int id) {
        return ((T)((contentView_ == null)?null:contentView_.findViewById(id)));
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        contentView_ = super.onCreateView(inflater, container, savedInstanceState);
        if (contentView_ == null) {
            contentView_ = inflater.inflate(R.layout.tab_schedule_pane, container, false);
        }
        return contentView_;
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        contentView_ = null;
        edtDispName = null;
        edtHour = null;
        edtMin = null;
        edtDispQty = null;
        disp_records_view = null;
        BtnDispPost = null;
        disp_spinner = null;
    }

    private void init_(Bundle savedInstanceState) {
        OnViewChangedNotifier.registerOnViewChangedListener(this);
    }

    @Override
    public void onViewCreated(View view, Bundle savedInstanceState) {
        super.onViewCreated(view, savedInstanceState);
        onViewChangedNotifier_.notifyViewChanged(this);
    }

    public static SchedulePane_.FragmentBuilder_ builder() {
        return new SchedulePane_.FragmentBuilder_();
    }

    @Override
    public void onViewChanged(HasViews hasViews) {
        this.edtDispName = hasViews.internalFindViewById(R.id.edtDispName);
        this.edtHour = hasViews.internalFindViewById(R.id.edtHour);
        this.edtMin = hasViews.internalFindViewById(R.id.edtMin);
        this.edtDispQty = hasViews.internalFindViewById(R.id.edtDispQty);
        this.disp_records_view = hasViews.internalFindViewById(R.id.disp_records_view);
        this.BtnDispPost = hasViews.internalFindViewById(R.id.BtnDispPost);
        this.disp_spinner = hasViews.internalFindViewById(R.id.disp_spinner);
        afterViews();
    }

    public static class FragmentBuilder_
        extends FragmentBuilder<SchedulePane_.FragmentBuilder_, com.ti.smartconfig.SchedulePane>
    {

        @Override
        public com.ti.smartconfig.SchedulePane build() {
            SchedulePane_ fragment_ = new SchedulePane_();
            fragment_.setArguments(args);
            return fragment_;
        }
    }
}
